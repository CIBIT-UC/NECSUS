{
    "bvnbformat": 1,
    "bvnbformat_minor": 0,
    "cells": [
        {
            "cell_type": "code",
            "execution_count": 15,
            "metadata": {
            },
            "outputs": [
                {
                    "name": "stdout",
                    "output_type": "stream",
                    "text": [
                        "Processing subjects: ['sub-02']; sessions: ['ses-01']; runs: ['run-01'] and tasks:['glare']"
                    ]
                }
            ],
            "source": [
                "subjs = ['sub-02']\n",
                "sessions = ['ses-01']\n",
                "runs = ['run-01']\n",
                "tasks = ['glare']\n",
                "\n",
                "\n",
                "stc_pp = 'SCCTBL'\n",
                "mc_pp = '3DMCTS'\n",
                "tfglm_pp='THPGLMF3c'\n",
                "\n",
                "\n",
                "print(f'Processing subjects: {subjs}; sessions: {sessions}; runs: {runs} and tasks:{tasks}')\n",
                "\n",
                "vtc_pp   = f'{stc_pp}_{mc_pp}_{tfglm_pp}_MNI'"
            ]
        },
        {
            "cell_type": "code",
            "execution_count": 16,
            "metadata": {
            },
            "outputs": [
                {
                    "name": "stdout",
                    "output_type": "stream",
                    "text": [
                        "Processing participant sub-02\n",
                        "    Completed spatial smoothing (6 mm) of run-01\n",
                        "Finished processing participant sub-02, session ses-01"
                    ]
                }
            ],
            "source": [
                "\n",
                "for s in subjs:\n",
                "    print(f\"Processing participant {s}\")\n",
                "    for ses in sessions:\n",
                "        vmr = bv.open(f\"derivatives/rawdata_bv/{s}/{ses}/anat/{s}_{ses}_{runs[0]}_T1w_IIHC_MNI.vmr\")\n",
                "        if vmr != None:\n",
                "            for r in runs:\n",
                "                for task in tasks:\n",
                "                    vtcfile = f\"../func/{s}_{ses}_task-{task}_{r}_bold_{vtc_pp}.vtc\"\n",
                "                    if vmr.link_vtc(vtcfile):\n",
                "                    \n",
                "                        if vmr.smooth_spatial(6, 'mm'):\n",
                "                            print(f\"    Completed spatial smoothing (6 mm) of {r}\")\n",
                "                        else:\n",
                "                            print(f\"    Error running spatial smoothing for {r}\")\n",
                "                    else:\n",
                "                        print(f\"  Error: could not link {r} vtc file of {s}\")\n",
                "            vmr.close()\n",
                "        else:\n",
                "            print(f\"  Error loading VMR of participant {s} session {ses}\")\n",
                "        print(f\"Finished processing participant {s}, session {ses}\")    \n",
                "    "
            ]
        },
        {
            "cell_type": "code",
            "execution_count": -1,
            "metadata": {
            },
            "outputs": [
            ],
            "source": [
            ]
        }
    ],
    "log_brainvoyager_code": false,
    "metadata": {
    }
}
